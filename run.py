#!/usr/bin/env python3
"""
Script de d√©marrage pour l'application ITIL Management System
"""

import os
import sys
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

def main():
    print("üöÄ D√©marrage de l'application ITIL Management System")
    print("=" * 50)
    
    # V√©rifier que Flask est install√©
    try:
        import flask
        print("‚úÖ Flask est install√©")
    except ImportError:
        print("‚ùå Flask n'est pas install√©")
        print("Installez les d√©pendances avec : pip install -r requirements.txt")
        sys.exit(1)
    
    # V√©rifier la configuration
    print("\nüìã Configuration actuelle:")
    print(f"   Host: {os.getenv('MYSQL_HOST', 'localhost')}")
    print(f"   Port: {os.getenv('MYSQL_PORT', '3306')}")
    print(f"   User: {os.getenv('MYSQL_USER', 'root')}")
    print(f"   Database: {os.getenv('MYSQL_DATABASE', 'itil_app')}")
    
    # Importer et d√©marrer l'application
    try:
        from app import app, init_app
        
        print("\nüîß Initialisation de l'application...")
        init_app()
        
        print("\nüåê D√©marrage du serveur...")
        print("   URL: http://localhost:5000")
        print("   Admin: admin@admin.com / admin123")
        print("\nAppuyez sur Ctrl+C pour arr√™ter le serveur")
        
        # D√©marrer l'application
        app.run(debug=True, host='0.0.0.0', port=5000)
        
    except Exception as e:
        print(f"\n‚ùå Erreur lors du d√©marrage: {e}")
        print("\nV√©rifiez que:")
        print("1. MySQL est d√©marr√©")
        print("2. Le fichier .env est configur√©")
        print("3. La base de donn√©es 'itil_app' existe")
        sys.exit(1)

if __name__ == "__main__":
    main() 